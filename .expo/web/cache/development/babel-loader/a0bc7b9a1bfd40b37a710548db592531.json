{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport * as React from \"react\";\nimport { NativeBaseProvider, Box, Heading, VStack, Select } from \"native-base\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport { useState, useEffect } from \"react\";\nimport { createDrawerNavigator, DrawerItem, getDrawerStatusFromState } from \"@react-navigation/drawer\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { TextInput } from \"react-native-gesture-handler\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport Login from \"./Login\";\nimport { background, borderLeft, get, createStyleFunction, style } from \"styled-system\";\nimport AddItem from \"./AddTeam\";\nimport ItemsNavigator from \"./items\";\nimport { initializeApp } from \"@firebase/app\";\nimport firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport { getFirestore, setDoc, doc, deleteDoc, Firestore, ref, collection, query, getDocs, onSnapshot, QuerySnapshot, updateDoc, arrayUnion } from \"firebase/firestore\";\nimport { Icon } from \"native-base\";\nimport { getAuth, updateEmail, signOut, updatePassword, EmailAuthProvider, reauthenticateWithCredential, deleteUser } from \"firebase/auth\";\nimport { auth } from \"../firebase\";\nvar AnotherStack = createNativeStackNavigator();\nvar firestore = getFirestore();\n\nvar AddTeamItem = function AddTeamItem(_ref) {\n  var route = _ref.route,\n      navigation = _ref.navigation;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      itemName = _useState2[0],\n      editItemName = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      itemQuantity = _useState4[0],\n      editItemQuantity = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      itemSize = _useState6[0],\n      editItemSize = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      itemColor = _useState8[0],\n      editItemColor = _useState8[1];\n\n  var _useState9 = useState(\"\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      err = _useState10[0],\n      setErr = _useState10[1];\n\n  useEffect(function () {\n    setErr(\"\");\n  }, [itemName, itemQuantity, itemSize, itemColor]);\n\n  var AddItemToDatabase = function AddItemToDatabase() {\n    var item, currentTeamDoc;\n    return _regeneratorRuntime.async(function AddItemToDatabase$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!(itemName.length > 0 && itemQuantity.length > 0 && itemSize.length > 0 && itemColor.length > 0)) {\n              _context.next = 21;\n              break;\n            }\n\n            item = {\n              Name: itemName,\n              Quantity: itemQuantity,\n              Size: itemSize,\n              Color: itemColor,\n              TeamName: route.params.addTeamName\n            };\n            _context.prev = 2;\n            currentTeamDoc = doc(firestore, \"Teams\", route.params.addTeamName);\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(updateDoc(currentTeamDoc, {\n              Items: arrayUnion(item)\n            }));\n\n          case 6:\n            _context.next = 8;\n            return _regeneratorRuntime.awrap(alert(\"Item successfully added!\"));\n\n          case 8:\n            editItemName(\"\");\n            editItemQuantity(\"\");\n            editItemSize(\"\");\n            editItemColor(\"\");\n            console.log(\"added team to database\");\n            _context.next = 19;\n            break;\n\n          case 15:\n            _context.prev = 15;\n            _context.t0 = _context[\"catch\"](2);\n            alert(\"Can't add item. This could be a problem with your connection\");\n            console.log(\"database write failed\");\n\n          case 19:\n            _context.next = 22;\n            break;\n\n          case 21:\n            setErr(\"Please complete every field!!!\");\n\n          case 22:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[2, 15]], Promise);\n  };\n\n  return React.createElement(NativeBaseProvider, null, React.createElement(View, {\n    style: styles.GoBackInstructionsView\n  }, React.createElement(Text, {\n    style: styles.GoBackInstructionsText\n  }, \"Team Name: \", route.params.addTeamName)), React.createElement(Box, {\n    safeArea: true,\n    flex: 10,\n    py: \"2\",\n    w: \"90%\",\n    mx: \"auto\"\n  }, React.createElement(VStack, {\n    space: 3,\n    mt: \"5\"\n  }, React.createElement(Heading, {\n    size: \"lg\",\n    fontWeight: \"600\",\n    color: \"coolGray.800\"\n  }, \"This is the page that will allow you to create new Items\"), React.createElement(ScrollView, {\n    style: styles.addItemsScrollView\n  }, React.createElement(Heading, {\n    mt: \"1\",\n    color: \"coolGray.600\",\n    fontWeight: \"medium\",\n    size: \"xs\"\n  }, \"Item Name*\"), React.createElement(TextInput, {\n    required: true,\n    onChangeText: function onChangeText(value) {\n      return editItemName(value);\n    },\n    placeholder: \"Please enter name of the item\",\n    value: itemName,\n    style: styles.input\n  }), React.createElement(Heading, {\n    mt: \"1\",\n    color: \"coolGray.600\",\n    fontWeight: \"medium\",\n    size: \"xs\"\n  }, \"Item Quantity*\"), React.createElement(TextInput, {\n    required: true,\n    onChangeText: function onChangeText(value) {\n      return editItemQuantity(value);\n    },\n    placeholder: \"Please enter the quantity\",\n    value: itemQuantity,\n    style: styles.input\n  }), React.createElement(Heading, {\n    mt: \"1\",\n    color: \"coolGray.600\",\n    fontWeight: \"medium\",\n    size: \"xs\"\n  }, \"Item Size*\"), React.createElement(TextInput, {\n    required: true,\n    onChangeText: function onChangeText(value) {\n      return editItemSize(value);\n    },\n    placeholder: \"Please enter size\",\n    value: itemSize,\n    style: styles.input\n  }), React.createElement(Heading, {\n    mt: \"1\",\n    color: \"coolGray.600\",\n    fontWeight: \"medium\",\n    size: \"xs\"\n  }, \"Item Color*\"), React.createElement(TextInput, {\n    required: true,\n    onChangeText: function onChangeText(value) {\n      return editItemColor(value);\n    },\n    placeholder: \"Please enter color\",\n    value: itemColor,\n    style: styles.input\n  }), React.createElement(Text, {\n    style: {\n      color: \"#bf0b23\",\n      fontWeight: \"bold\"\n    }\n  }, err)), React.createElement(Button, {\n    title: \"Add Item\",\n    onPress: function onPress() {\n      AddItemToDatabase();\n      console.log(\"adding item to database...\");\n    },\n    mt: \"2\",\n    colorScheme: \"red\",\n    _text: {\n      color: \"white\"\n    }\n  }, \"Add New Item\"))));\n};\n\nexport default function AddTeamItems(_ref2) {\n  var navigation = _ref2.navigation;\n  return React.createElement(AnotherStack.Navigator, {\n    initialRouteName: \"AddTeamItem\"\n  }, React.createElement(AnotherStack.Screen, {\n    name: \"AddTeamItem\",\n    component: AddTeamItem,\n    options: {\n      headerShown: false\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 5\n  },\n  GoBackInstructionsView: {\n    alignItems: \"center\",\n    margin: 8\n  },\n  GoBackInstructionsText: {\n    fontSize: 16,\n    color: \"grey\",\n    alignItems: \"center\",\n    textAlign: \"center\"\n  },\n  addItemsScrollView: {\n    flexGrow: 0\n  },\n  input: {\n    height: 44,\n    padding: 10,\n    borderWidth: 0.5,\n    borderColor: \"grey\",\n    marginBottom: 10\n  }\n});","map":{"version":3,"sources":["/Users/nhandang/Documents/source/repos-testing/SoccerInventory/components/AddItem.js"],"names":["React","NativeBaseProvider","Box","Heading","VStack","Select","useState","useEffect","createDrawerNavigator","DrawerItem","getDrawerStatusFromState","NavigationContainer","TextInput","createNativeStackNavigator","Login","background","borderLeft","get","createStyleFunction","style","AddItem","ItemsNavigator","initializeApp","firebase","getFirestore","setDoc","doc","deleteDoc","Firestore","ref","collection","query","getDocs","onSnapshot","QuerySnapshot","updateDoc","arrayUnion","Icon","getAuth","updateEmail","signOut","updatePassword","EmailAuthProvider","reauthenticateWithCredential","deleteUser","auth","AnotherStack","firestore","AddTeamItem","route","navigation","itemName","editItemName","itemQuantity","editItemQuantity","itemSize","editItemSize","itemColor","editItemColor","err","setErr","AddItemToDatabase","length","item","Name","Quantity","Size","Color","TeamName","params","addTeamName","currentTeamDoc","Items","alert","console","log","styles","GoBackInstructionsView","GoBackInstructionsText","addItemsScrollView","value","input","color","fontWeight","AddTeamItems","headerShown","StyleSheet","create","container","flex","padding","alignItems","margin","fontSize","textAlign","flexGrow","height","borderWidth","borderColor","marginBottom"],"mappings":"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","sourcesContent":["import * as React from \"react\";\n\nimport { NativeBaseProvider, Box, Heading, VStack, Select } from \"native-base\";\nimport {\n  Button,\n  View,\n  Text,\n  Alert,\n  StyleSheet,\n  FlatList,\n  SafeAreaView,\n  StatusBar,\n  TouchableOpacity,\n  Platform,\n  ScrollView,\n  Pressable,\n} from \"react-native\";\nimport { useState, useEffect } from \"react\";\n\nimport {\n  createDrawerNavigator,\n  DrawerItem,\n  getDrawerStatusFromState,\n} from \"@react-navigation/drawer\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { TextInput } from \"react-native-gesture-handler\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport Login from \"./Login\";\nimport {\n  background,\n  borderLeft,\n  get,\n  createStyleFunction,\n  style,\n} from \"styled-system\";\nimport AddItem from \"./AddTeam\";\nimport ItemsNavigator from \"./items\";\n\nimport { initializeApp } from \"@firebase/app\";\nimport firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport {\n  getFirestore,\n  setDoc,\n  doc,\n  deleteDoc,\n  Firestore,\n  ref,\n  collection,\n  query,\n  getDocs,\n  onSnapshot,\n  QuerySnapshot,\n  updateDoc,\n  arrayUnion,\n} from \"firebase/firestore\";\nimport { Icon } from \"native-base\";\nimport {\n  getAuth,\n  updateEmail,\n  signOut,\n  updatePassword,\n  EmailAuthProvider,\n  reauthenticateWithCredential,\n  deleteUser,\n} from \"firebase/auth\";\nimport { auth } from \"../firebase\";\n\nconst AnotherStack = createNativeStackNavigator();\nconst firestore = getFirestore();\n\n\n//this will essentially be a form\n//that will prompt the user for\n//the name, color, and quantity\n//of a new item\nconst AddTeamItem = ({ route, navigation }) => {\n  const [itemName, editItemName] = useState(\"\"); //Used for purposes of editingItemName\n  const [itemQuantity, editItemQuantity] = useState(\"\"); //Used for purposes of editingItemQuantity\n  const [itemSize, editItemSize] = useState(\"\"); //Used for purposes of editingItemSize\n  const [itemColor, editItemColor] = useState(\"\"); //Used for purposes of editingItemColor\n\n  // Error message\n  const [err, setErr] = useState(\"\");\n\n  // Use effect for clear up error message\n  useEffect(() => {\n    setErr(\"\");\n  }, [itemName, itemQuantity, itemSize, itemColor]);\n  const AddItemToDatabase = async () => {\n    if (\n      itemName.length > 0 &&\n      itemQuantity.length > 0 &&\n      itemSize.length > 0 &&\n      itemColor.length > 0\n    ) {\n      //Item Creation\n      const item = {\n        Name: itemName,\n        Quantity: itemQuantity,\n        Size: itemSize,\n        Color: itemColor,\n        TeamName: route.params.addTeamName,\n      };\n\n      //Attempting to write item to firestore\n      try {\n        const currentTeamDoc = doc(firestore, \"Teams\", route.params.addTeamName)\n        await updateDoc(currentTeamDoc, {\n            Items: arrayUnion(item)\n        });\n        await alert(\"Item successfully added!\")\n        editItemName(\"\");\n        editItemQuantity(\"\");\n        editItemSize(\"\");\n        editItemColor(\"\");\n        console.log(\"added team to database\");\n      } catch {\n        alert(\n          \"Can't add item. This could be a problem with your connection\"\n        );\n        console.log(\"database write failed\");\n      }\n\n    } else {\n      setErr(\"Please complete every field!!!\");\n    }\n  };\n\n  return (\n    <NativeBaseProvider>\n      <View style={styles.GoBackInstructionsView}>\n        <Text style={styles.GoBackInstructionsText}>\n          Team Name: {route.params.addTeamName}\n        </Text>\n      </View>\n      <Box safeArea flex={10} py=\"2\" w=\"90%\" mx=\"auto\">\n        <VStack space={3} mt=\"5\">\n          <Heading size=\"lg\" fontWeight=\"600\" color=\"coolGray.800\">\n            This is the page that will allow you to create new Items\n          </Heading>\n\n          <ScrollView style = {styles.addItemsScrollView}>\n            <Heading mt=\"1\" color=\"coolGray.600\" fontWeight=\"medium\" size=\"xs\">\n              Item Name*\n            </Heading>\n            <TextInput\n              required\n              onChangeText={(value) => editItemName(value)}\n              placeholder={\"Please enter name of the item\"}\n              value={itemName}\n              style={styles.input}\n            />\n            <Heading mt=\"1\" color=\"coolGray.600\" fontWeight=\"medium\" size=\"xs\">\n              Item Quantity*\n            </Heading>\n            <TextInput\n              required\n              onChangeText={(value) => editItemQuantity(value)}\n              placeholder={\"Please enter the quantity\"}\n              value={itemQuantity}\n              style={styles.input}\n            />\n            <Heading mt=\"1\" color=\"coolGray.600\" fontWeight=\"medium\" size=\"xs\">\n              Item Size*\n            </Heading>\n            <TextInput\n              required\n              onChangeText={(value) => editItemSize(value)}\n              placeholder={\"Please enter size\"}\n              value={itemSize}\n              style={styles.input}\n            />\n            <Heading mt=\"1\" color=\"coolGray.600\" fontWeight=\"medium\" size=\"xs\">\n              Item Color*\n            </Heading>\n            <TextInput\n              required\n              onChangeText={(value) => editItemColor(value)}\n              placeholder={\"Please enter color\"}\n              value={itemColor}\n              style={styles.input}\n            />\n            <Text\n              style={{\n                color: \"#bf0b23\",\n                fontWeight: \"bold\",\n              }}\n            >\n              {err}\n            </Text>\n          </ScrollView>\n\n          <Button\n            title=\"Add Item\"\n            onPress={() => {\n              AddItemToDatabase();\n              console.log(\"adding item to database...\");\n            }}\n            mt=\"2\"\n            colorScheme=\"red\"\n            _text={{ color: \"white\" }}\n          >\n            Add New Item\n          </Button>\n        </VStack>\n      </Box>\n    </NativeBaseProvider>\n  );\n}\n\nexport default function AddTeamItems({ navigation })\n{\n  return (\n    <AnotherStack.Navigator \n      initialRouteName=\"AddTeamItem\"\n    >\n      <AnotherStack.Screen \n        name = \"AddTeamItem\"\n        component = {AddTeamItem}\n        options = {{ headerShown: false, }}\n      />\n    </AnotherStack.Navigator>\n  );\n}\n\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 5,\n  },\n  GoBackInstructionsView: {\n    alignItems: \"center\",\n    margin: 8,\n  },\n  GoBackInstructionsText: {\n    fontSize: 16,\n    color: \"grey\",\n    alignItems: \"center\",\n    textAlign: \"center\",\n  },\n  addItemsScrollView: {\n    flexGrow: 0\n  },\n  input: {\n    height: 44,\n    padding: 10,\n    borderWidth: 0.5,\n    borderColor: \"grey\",\n    marginBottom: 10,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}